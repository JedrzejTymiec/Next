name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Stop if release
        run: |
          if git log -1 --pretty=%B | grep -q '^chore(release):'; then
            echo "Skipping: triggered by own release commit"
            exit 0;
          fi

      - name: Set git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run release
        run: npx standard-version

      - name: Extract version
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_TOKEN_RELEASE }}
          title: "chore(release): ${{ steps.version.outputs.version }}"
          body: "Automated PR for release version bump"
          base: master
          branch: release/${{ steps.version.outputs.version }}
          delete-branch: true
          signoff: false

      - name: Enable auto-merge via GraphQL
        run: |
          PR_ID=$(gh pr view "${{ steps.cpr.outputs.pull-request-url }}" --json id -q .id)
          gh api graphql -f query='
            mutation($prId: ID!) {
              enablePullRequestAutoMerge(input: {
                pullRequestId: $prId,
                mergeMethod: SQUASH
              }) {
                pullRequest {
                  autoMergeRequest {
                    enabledAt
                    enabledBy { login }
                  }
                }
              }
            }' -f prId=$PR_ID
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}

      - name: Push tags
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN_RELEASE }}@github.com/${{ github.repository }}
          git push origin --tags
        env:
          GIT_TERMINAL_PROMPT: 0
          GH_TOKEN: ${{ secrets.GH_TOKEN_RELEASE }}